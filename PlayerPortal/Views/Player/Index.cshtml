@model IEnumerable<PlayerPortal.Data.DataTransferModels.PlayerDataTransferModel>

@{
    ViewData["Title"] = "Players List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var toastrType = '@TempData["ToastrType"]';
            var toastrMessage = '@TempData["ToastrMessage"]';
            if (toastrType && toastrMessage) {
                showToastr(toastrMessage, toastrType);
            }

            // Initialize Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Debounce function to limit the rate of search requests
            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            // Function to perform the search
            function performSearch(searchTerm) {
                $.ajax({
                    url: '@Url.Action("Index", "Player")',
                    type: 'GET',
                    data: { searchTerm: searchTerm },
                    success: function (data) {
                        // Update the table body with new results
                        $('.table-responsive').html($(data).find('.table-responsive').html());
                        // Re-initialize tooltips after table update
                        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                            return new bootstrap.Tooltip(tooltipTriggerEl);
                        });
                    },
                    error: function () {
                        console.error('Error fetching search results');
                    }
                });
            }

            // Attach input event listener with debounce
            const debouncedSearch = debounce(function () {
                var searchTerm = $('#searchInput').val();
                performSearch(searchTerm);
            }, 300); // 300ms debounce delay

            $('#searchInput').on('input', debouncedSearch);

            // Clear button event handler
            $('#clearSearch').on('click', function () {
                $('#searchInput').val('');
                performSearch('');
            });
        });
    </script>
}

<div class="row align-items-center mb-4">
    <div class="col-md-6">
        <h2 class="text-success mb-0"><i class="fas fa-users me-2"></i>Players List</h2>
    </div>
    <div class="col-md-4">
        <div class="input-group">
            <input type="text" id="searchInput" name="searchTerm" value="@ViewBag.SearchTerm"
                   class="form-control" placeholder="Search by name or Tshirt number..."
                   aria-label="Search players by name or shirt number" />
            <button type="button" id="clearSearch" class="btn btn-outline-secondary" title="Clear search">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    <div class="col-md-2 text-end">
        <a asp-action="Create" class="btn btn-success w-100">
            <i class="fas fa-plus me-1"></i> Add Player
        </a>
    </div>
</div>

<div class="table-responsive shadow-sm rounded-3 overflow-hidden">
    <table class="table table-bordered table-hover align-middle mb-0">
        <thead class="table-success text-center">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().Name)</th>
                <th>@Html.DisplayNameFor(model => model.First().ShirtNo)</th>
                <th>@Html.DisplayNameFor(model => model.First().Appearance)</th>
                <th>@Html.DisplayNameFor(model => model.First().Goals)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="5" class="text-center text-muted py-4">No players found.</td>
                </tr>
            }
            else
            {
                @foreach (var player in Model)
                {
                    <tr class="text-center">
                        <td>@player.Name</td>
                        <td>@player.ShirtNo</td>
                        <td>@player.Appearance</td>
                        <td>@player.Goals</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@player.Id" class="btn btn-sm btn-outline-primary" data-bs-toggle="tooltip" data-bs-title="Edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a asp-action="Details" asp-route-id="@player.Id" class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" data-bs-title="Details">
                                    <i class="fas fa-info-circle"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@player.Id" class="btn btn-sm btn-outline-danger" data-bs-toggle="tooltip" data-bs-title="Delete">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@if (ViewBag.TotalPages > 1)
{
    <nav class="mt-4" aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@ViewBag.SearchTerm">@i</a>
                </li>
            }
        </ul>
    </nav>
}